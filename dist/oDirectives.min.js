(function(module) {
try {
  module = angular.module('envoc.directives.partials');
} catch (e) {
  module = angular.module('envoc.directives.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('/oTemplates/datatables/oTableDefault.tmpl.html',
    '<div class="dataTables_wrapper form-inline" role="grid">\n' +
    '    <div class="row">\n' +
    '        <div class="span6 pull-left">\n' +
    '            <div class="dataTables_length">\n' +
    '                <label>Show\n' +
    '                    <select size="1" aria-controls="user-table">\n' +
    '                        <option value="10" selected="selected">10</option>\n' +
    '                        <option value="25">25</option>\n' +
    '                        <option value="50">50</option>\n' +
    '                        <option value="100">100</option>\n' +
    '                    </select>entries</label>\n' +
    '            </div>\n' +
    '        </div>\n' +
    '        <div class="span6 pull-right">\n' +
    '            <div class="dataTables_filter">\n' +
    '                <label>Search:\n' +
    '                    <input type="text" aria-controls="user-table">\n' +
    '                </label>\n' +
    '            </div>\n' +
    '        </div>\n' +
    '    </div>\n' +
    '    <table class="table table-striped dataTable" aria-describedby="user-table_info">\n' +
    '        <thead>\n' +
    '            <tr role="row"></tr>\n' +
    '        </thead>\n' +
    '\n' +
    '        <tbody role="alert" aria-live="polite" aria-relevant="all">\n' +
    '            <tr ng-repeat="row in rows">\n' +
    '                <td>\n' +
    '                    {{row}}\n' +
    '                </td>\n' +
    '            </tr>\n' +
    '        </tbody>\n' +
    '    </table>\n' +
    '    <div class="row">\n' +
    '        <div class="span6 pull-left">\n' +
    '            <div class="dataTables_info" id="user-table_info">Showing 1 to 4 of 4 entries</div>\n' +
    '        </div>\n' +
    '        <div class="span6 pull-right">\n' +
    '            <div class="dataTables_paginate paging_bootstrap">\n' +
    '                <ul class=" pagination">\n' +
    '                    <li class="prev disabled">\n' +
    '                        <a href="#">← Previous</a>\n' +
    '                    </li>\n' +
    '                    <li class="active">\n' +
    '                        <a href="#">1</a>\n' +
    '                    </li>\n' +
    '                    <li class="next disabled">\n' +
    '                        <a href="#">Next → </a>\n' +
    '                    </li>\n' +
    '                </ul>\n' +
    '            </div>\n' +
    '        </div>\n' +
    '    </div>\n' +
    '</div>\n' +
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('envoc.directives.partials');
} catch (e) {
  module = angular.module('envoc.directives.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('/oTemplates/validation/oValidationMessageFor.tmpl.html',
    '﻿<div>\n' +
    '    <!-- This is where the content of the tag gets replaced -->\n' +
    '    <div ng-transclude></div>\n' +
    '\n' +
    '    <!-- Errors here -->\n' +
    '    <ul class="list-unstyled" ng-show="matches.length" ng-class="{\'alert alert-danger\': matches.length}">\n' +
    '        <li ng-repeat="error in matches">\n' +
    '            <span class="field-validation-error">{{error.errorMessage}}</span>\n' +
    '        </li>\n' +
    '    </ul>\n' +
    '</div>');
}]);
})();

(function() {
    'use strict';

    angular.module('envoc.directives', [
        'envoc.directives.validation',
        'envoc.directives.datatables'
    ]);
})();
(function() {
    'use strict';

    angular.module('envoc.directives.validation', ['envoc.directives.partials']);
})();
﻿(function() {
    'use strict';

    angular
        .module('envoc.directives.validation')
        .directive('oValidateWith', [
            function() {
                return {
                    restrict: 'EA',
                    transclude: true,
                    template: '<div ng-transclude><div>',
                    scope: {
                        errors: "="
                    },
                    controller: function() {},
                    link: function(scope, element, attrs, ctrl) {
                        scope.$watch('errors', function(current) {
                            if (current) {
                                ctrl.errors = scope.errors;
                            }
                        });
                    }
                };
            }
        ]);
})();
﻿(function() {
    'use strict';

    angular
        .module('envoc.directives.validation')
        .directive('oValidationMessageFor', [
            function() {
                return {
                    restrict: 'EA',
                    require: '^oValidateWith',
                    templateUrl: '/oTemplates/validation/oValidationMessageFor.tmpl.html',
                    transclude: true,
                    scope: true,
                    link: function(scope, element, attr, oValidateWithCtrl) {
                        var key = attr.oValidationMessageFor.toLowerCase();
                        scope.errors = oValidateWithCtrl.errors;

                        scope.$watch(getErrors, function(current, previous) {
                            if (current) {
                                scope.matches = current.filter(function(error) {
                                    return error.propertyName.toLowerCase() == key;
                                });
                            }
                        });

                        function getErrors() { return oValidateWithCtrl.errors; }
                    }
                };
            }
        ]);
})();
(function() {
    'use strict';

    angular.module('envoc.directives.datatables', ['envoc.directives.partials']);
})();
(function() {
    'use strict';

    angular
        .module('envoc.directives.datatables')
        .controller('oTableCtrl', function($http) {
            var config,
                self = this;

            this.init = function(config_) {
                config = config_;
                if (!config.dataSrcUrl && !config.dataSrc) {
                    throw new Error('A data source is required')
                }

                config.dataSrcUrl ? this.fetch() : (this.data = config.dataSrc);
            }

            this.fetch = function() {
                $http
                    .post(config.dataSrcUrl)
                    .then(dataFetchSuccess, dataFetchError);

                function dataFetchSuccess(resp) {
                    self.data = resp.data
                }

                function dataFetchError() {
                    alert('Error fetching data');
                }
            }
        })
        .directive('oTable', function() {
            return {
                priority: 800,
                restrict: 'EA',
                scope: {
                    config: '='
                },
                controller: 'oTableCtrl',
                controllerAs: 'oTableCtrl',
                compile: function compile(tElement, tAttrs, transclude) {
                    return function postLink(scope, iElement, iAttrs, controller) {
                        controller.init(scope.config);
                    }
                }
            };
        });
})();

(function() {
    'use strict';

    angular
        .module('envoc.directives.datatables')
        .directive('oTableDefault', function() {
            return {
                templateUrl: '/oTemplates/datatables/oTableDefault.tmpl.html',
                require: '^oTable',
                restrict: 'EA',
                scope: {},
                compile: function compile(tElement, tAttrs, transclude) {
                    if(!tAttrs.fields){
                        throw new Error('No filed list included')
                    }

                    var theBodyRow = tElement.find('tbody').find('tr');
                    var theHeadRow = tElement.find('thead').find('tr');

                    var theFields = tAttrs.fields.split(',');

                    buildTemplate(theHeadRow, '<td>', '</td>', theFields);

                    buildTemplate(theBodyRow, '<td>{{row.', '}}</td>', theFields);

                    function buildTemplate(theRow, startTemplate, endTemplate, fields) {
                        var fieldTemplate = startTemplate + fields.join(endTemplate + startTemplate) + endTemplate;

                        theRow.html(fieldTemplate);
                    }

                    return function postLink(scope, iElement, iAttrs, controller) {

                        ctor();
                        function ctor() {
                            scope.$watch(getOTableData, applyToScope);
                        }

                        function getOTableData() {
                            return controller.data;
                        }

                        function applyToScope(current, previous, scope) {
                            if (current && current.length) {
                                scope.rows = current;
                            }
                        }
                    }
                }
            };
        });
})();
